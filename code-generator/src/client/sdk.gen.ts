// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-axios';
import type { GetApiAbpApiDefinitionData, GetApiAbpApiDefinitionError, GetApiAbpApiDefinitionResponse, GetApiAbpApplicationConfigurationData, GetApiAbpApplicationConfigurationError, GetApiAbpApplicationConfigurationResponse, GetApiAbpApplicationLocalizationData, GetApiAbpApplicationLocalizationError, GetApiAbpApplicationLocalizationResponse, GetApiAbpMultiTenancyTenantsByNameByNameData, GetApiAbpMultiTenancyTenantsByNameByNameError, GetApiAbpMultiTenancyTenantsByNameByNameResponse, GetApiAbpMultiTenancyTenantsByIdByIdData, GetApiAbpMultiTenancyTenantsByIdByIdError, GetApiAbpMultiTenancyTenantsByIdByIdResponse, PostApiAppBrandData, PostApiAppBrandError, PostApiAppBrandResponse, GetApiAppBrandData, GetApiAppBrandError, GetApiAppBrandResponse, PutApiAppBrandByIdData, PutApiAppBrandByIdError, PutApiAppBrandByIdResponse, GetApiAppBrandByIdData, GetApiAppBrandByIdError, GetApiAppBrandByIdResponse, DeleteApiAppBrandByIdData, DeleteApiAppBrandByIdError, DeleteApiAppBrandByIdResponse, PostApiAppBrandSetProductTypeData, PostApiAppBrandSetProductTypeError, PostApiAppBrandSetProductTypeResponse, GetApiAppBrandManyData, GetApiAppBrandManyError, GetApiAppBrandManyResponse, DeleteApiAppBrandManyData, DeleteApiAppBrandManyError, DeleteApiAppBrandManyResponse, GetApiAppProductCategoryByIdItemByCacheData, GetApiAppProductCategoryByIdItemByCacheError, GetApiAppProductCategoryByIdItemByCacheResponse, GetApiAppProductCategoryManayByCacheData, GetApiAppProductCategoryManayByCacheError, GetApiAppProductCategoryManayByCacheResponse, GetApiAppProductCategoryByCacheData, GetApiAppProductCategoryByCacheError, GetApiAppProductCategoryByCacheResponse, GetApiAppProductCategoryByIdData, GetApiAppProductCategoryByIdError, GetApiAppProductCategoryByIdResponse, PutApiAppProductCategoryByIdData, PutApiAppProductCategoryByIdError, PutApiAppProductCategoryByIdResponse, DeleteApiAppProductCategoryByIdData, DeleteApiAppProductCategoryByIdError, DeleteApiAppProductCategoryByIdResponse, GetApiAppProductCategoryManyData, GetApiAppProductCategoryManyError, GetApiAppProductCategoryManyResponse, DeleteApiAppProductCategoryManyData, DeleteApiAppProductCategoryManyError, DeleteApiAppProductCategoryManyResponse, GetApiAppProductCategoryData, GetApiAppProductCategoryError, GetApiAppProductCategoryResponse, PostApiAppProductCategoryData, PostApiAppProductCategoryError, PostApiAppProductCategoryResponse, PostApiAppProductCategoryRepairDataData, PostApiAppProductCategoryRepairDataError, PostApiAppProductCategoryRepairDataResponse, GetApiAppProductCategoryByIdRootChildrenData, GetApiAppProductCategoryByIdRootChildrenError, GetApiAppProductCategoryByIdRootChildrenResponse, PostApiAppProductTypeData, PostApiAppProductTypeError, PostApiAppProductTypeResponse, GetApiAppProductTypeData, GetApiAppProductTypeError, GetApiAppProductTypeResponse, PutApiAppProductTypeByIdData, PutApiAppProductTypeByIdError, PutApiAppProductTypeByIdResponse, GetApiAppProductTypeByIdData, GetApiAppProductTypeByIdError, GetApiAppProductTypeByIdResponse, DeleteApiAppProductTypeByIdData, DeleteApiAppProductTypeByIdError, DeleteApiAppProductTypeByIdResponse, PostApiAppProductTypeSetPropertyNamesByProductTypeIdData, PostApiAppProductTypeSetPropertyNamesByProductTypeIdError, PostApiAppProductTypeSetPropertyNamesByProductTypeIdResponse, GetApiAppProductTypePropertyNameListByProductTypeIdData, GetApiAppProductTypePropertyNameListByProductTypeIdError, GetApiAppProductTypePropertyNameListByProductTypeIdResponse, GetApiAppProductTypePropertyNamesByProductTypeIdData, GetApiAppProductTypePropertyNamesByProductTypeIdError, GetApiAppProductTypePropertyNamesByProductTypeIdResponse, GetApiAppProductTypeManyData, GetApiAppProductTypeManyError, GetApiAppProductTypeManyResponse, DeleteApiAppProductTypeManyData, DeleteApiAppProductTypeManyError, DeleteApiAppProductTypeManyResponse, GetApiAppProductTypeCategoryByIdItemByCacheData, GetApiAppProductTypeCategoryByIdItemByCacheError, GetApiAppProductTypeCategoryByIdItemByCacheResponse, GetApiAppProductTypeCategoryManayByCacheData, GetApiAppProductTypeCategoryManayByCacheError, GetApiAppProductTypeCategoryManayByCacheResponse, GetApiAppProductTypeCategoryByCacheData, GetApiAppProductTypeCategoryByCacheError, GetApiAppProductTypeCategoryByCacheResponse, GetApiAppProductTypeCategoryByIdData, GetApiAppProductTypeCategoryByIdError, GetApiAppProductTypeCategoryByIdResponse, PutApiAppProductTypeCategoryByIdData, PutApiAppProductTypeCategoryByIdError, PutApiAppProductTypeCategoryByIdResponse, DeleteApiAppProductTypeCategoryByIdData, DeleteApiAppProductTypeCategoryByIdError, DeleteApiAppProductTypeCategoryByIdResponse, GetApiAppProductTypeCategoryManyData, GetApiAppProductTypeCategoryManyError, GetApiAppProductTypeCategoryManyResponse, DeleteApiAppProductTypeCategoryManyData, DeleteApiAppProductTypeCategoryManyError, DeleteApiAppProductTypeCategoryManyResponse, GetApiAppProductTypeCategoryData, GetApiAppProductTypeCategoryError, GetApiAppProductTypeCategoryResponse, PostApiAppProductTypeCategoryData, PostApiAppProductTypeCategoryError, PostApiAppProductTypeCategoryResponse, PostApiAppProductTypeCategoryRepairDataData, PostApiAppProductTypeCategoryRepairDataError, PostApiAppProductTypeCategoryRepairDataResponse, GetApiAppProductTypeCategoryByIdRootChildrenData, GetApiAppProductTypeCategoryByIdRootChildrenError, GetApiAppProductTypeCategoryByIdRootChildrenResponse, PostApiAppPropertyNameByProductTypeByProductTypeIdData, PostApiAppPropertyNameByProductTypeByProductTypeIdError, PostApiAppPropertyNameByProductTypeByProductTypeIdResponse, GetApiAppPropertyNameByProductTypeByProductTypeIdData, GetApiAppPropertyNameByProductTypeByProductTypeIdError, GetApiAppPropertyNameByProductTypeByProductTypeIdResponse, PostApiAppPropertyNameByIdUpdateData, PostApiAppPropertyNameByIdUpdateError, PostApiAppPropertyNameByIdUpdateResponse, GetApiAppPropertyNameData, GetApiAppPropertyNameError, GetApiAppPropertyNameResponse, GetApiAppPropertyNameByIdData, GetApiAppPropertyNameByIdError, GetApiAppPropertyNameByIdResponse, DeleteApiAppPropertyNameByIdData, DeleteApiAppPropertyNameByIdError, DeleteApiAppPropertyNameByIdResponse, GetApiAppPropertyNameManyData, GetApiAppPropertyNameManyError, GetApiAppPropertyNameManyResponse, DeleteApiAppPropertyNameManyData, DeleteApiAppPropertyNameManyError, DeleteApiAppPropertyNameManyResponse, PostApiAppPropertyValueData, PostApiAppPropertyValueError, PostApiAppPropertyValueResponse, GetApiAppPropertyValueData, GetApiAppPropertyValueError, GetApiAppPropertyValueResponse, PostApiAppPropertyValueByIdUpdateData, PostApiAppPropertyValueByIdUpdateError, PostApiAppPropertyValueByIdUpdateResponse, GetApiAppPropertyValueByIdData, GetApiAppPropertyValueByIdError, GetApiAppPropertyValueByIdResponse, DeleteApiAppPropertyValueByIdData, DeleteApiAppPropertyValueByIdError, DeleteApiAppPropertyValueByIdResponse, GetApiAppPropertyValueManyData, GetApiAppPropertyValueManyError, GetApiAppPropertyValueManyResponse, DeleteApiAppPropertyValueManyData, DeleteApiAppPropertyValueManyError, DeleteApiAppPropertyValueManyResponse, PostApiAppStandardProductUnitData, PostApiAppStandardProductUnitError, PostApiAppStandardProductUnitResponse, GetApiAppStandardProductUnitData, GetApiAppStandardProductUnitError, GetApiAppStandardProductUnitResponse, PutApiAppStandardProductUnitByIdData, PutApiAppStandardProductUnitByIdError, PutApiAppStandardProductUnitByIdResponse, GetApiAppStandardProductUnitByIdData, GetApiAppStandardProductUnitByIdError, GetApiAppStandardProductUnitByIdResponse, DeleteApiAppStandardProductUnitByIdData, DeleteApiAppStandardProductUnitByIdError, DeleteApiAppStandardProductUnitByIdResponse, PostApiAppStandardProductUnitSetPropertyValueByStandardProductUnitIdData, PostApiAppStandardProductUnitSetPropertyValueByStandardProductUnitIdError, PostApiAppStandardProductUnitSetPropertyValueByStandardProductUnitIdResponse, PostApiAppStandardProductUnitSetManyCategoryListData, PostApiAppStandardProductUnitSetManyCategoryListError, PostApiAppStandardProductUnitSetManyCategoryListResponse, PostApiAppStandardProductUnitSetCategoryListByStandardProductUnitIdData, PostApiAppStandardProductUnitSetCategoryListByStandardProductUnitIdError, PostApiAppStandardProductUnitSetCategoryListByStandardProductUnitIdResponse, GetApiAppStandardProductUnitManyData, GetApiAppStandardProductUnitManyError, GetApiAppStandardProductUnitManyResponse, DeleteApiAppStandardProductUnitManyData, DeleteApiAppStandardProductUnitManyError, DeleteApiAppStandardProductUnitManyResponse, PostApiAppStockKeepingUnitData, PostApiAppStockKeepingUnitError, PostApiAppStockKeepingUnitResponse, GetApiAppStockKeepingUnitData, GetApiAppStockKeepingUnitError, GetApiAppStockKeepingUnitResponse, GetApiAppStockKeepingUnitByIdData, GetApiAppStockKeepingUnitByIdError, GetApiAppStockKeepingUnitByIdResponse, PutApiAppStockKeepingUnitByIdData, PutApiAppStockKeepingUnitByIdError, PutApiAppStockKeepingUnitByIdResponse, DeleteApiAppStockKeepingUnitByIdData, DeleteApiAppStockKeepingUnitByIdError, DeleteApiAppStockKeepingUnitByIdResponse, GetApiAppStockKeepingUnitByIdDetailData, GetApiAppStockKeepingUnitByIdDetailError, GetApiAppStockKeepingUnitByIdDetailResponse, GetApiAppStockKeepingUnitManyData, GetApiAppStockKeepingUnitManyError, GetApiAppStockKeepingUnitManyResponse, DeleteApiAppStockKeepingUnitManyData, DeleteApiAppStockKeepingUnitManyError, DeleteApiAppStockKeepingUnitManyResponse } from './types.gen';

export const client = createClient(createConfig());

export const getApiAbpApiDefinition = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAbpApiDefinitionData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAbpApiDefinitionResponse, GetApiAbpApiDefinitionError, ThrowOnError>({
        ...options,
        url: '/api/abp/api-definition'
    });
};

export const getApiAbpApplicationConfiguration = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAbpApplicationConfigurationData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAbpApplicationConfigurationResponse, GetApiAbpApplicationConfigurationError, ThrowOnError>({
        ...options,
        url: '/api/abp/application-configuration'
    });
};

export const getApiAbpApplicationLocalization = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAbpApplicationLocalizationData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAbpApplicationLocalizationResponse, GetApiAbpApplicationLocalizationError, ThrowOnError>({
        ...options,
        url: '/api/abp/application-localization'
    });
};

export const getApiAbpMultiTenancyTenantsByNameByName = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAbpMultiTenancyTenantsByNameByNameData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAbpMultiTenancyTenantsByNameByNameResponse, GetApiAbpMultiTenancyTenantsByNameByNameError, ThrowOnError>({
        ...options,
        url: '/api/abp/multi-tenancy/tenants/by-name/{name}'
    });
};

export const getApiAbpMultiTenancyTenantsByIdById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAbpMultiTenancyTenantsByIdByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAbpMultiTenancyTenantsByIdByIdResponse, GetApiAbpMultiTenancyTenantsByIdByIdError, ThrowOnError>({
        ...options,
        url: '/api/abp/multi-tenancy/tenants/by-id/{id}'
    });
};

export const postApiAppBrand = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppBrandData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppBrandResponse, PostApiAppBrandError, ThrowOnError>({
        ...options,
        url: '/api/app/brand'
    });
};

export const getApiAppBrand = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppBrandData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppBrandResponse, GetApiAppBrandError, ThrowOnError>({
        ...options,
        url: '/api/app/brand'
    });
};

export const putApiAppBrandById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiAppBrandByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiAppBrandByIdResponse, PutApiAppBrandByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/brand/{id}'
    });
};

export const getApiAppBrandById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppBrandByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppBrandByIdResponse, GetApiAppBrandByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/brand/{id}'
    });
};

export const deleteApiAppBrandById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppBrandByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppBrandByIdResponse, DeleteApiAppBrandByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/brand/{id}'
    });
};

export const postApiAppBrandSetProductType = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppBrandSetProductTypeData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppBrandSetProductTypeResponse, PostApiAppBrandSetProductTypeError, ThrowOnError>({
        ...options,
        url: '/api/app/brand/set-product-type'
    });
};

export const getApiAppBrandMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppBrandManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppBrandManyResponse, GetApiAppBrandManyError, ThrowOnError>({
        ...options,
        url: '/api/app/brand/many'
    });
};

export const deleteApiAppBrandMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppBrandManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppBrandManyResponse, DeleteApiAppBrandManyError, ThrowOnError>({
        ...options,
        url: '/api/app/brand/many'
    });
};

export const getApiAppProductCategoryByIdItemByCache = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductCategoryByIdItemByCacheData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductCategoryByIdItemByCacheResponse, GetApiAppProductCategoryByIdItemByCacheError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/{id}/item-by-cache'
    });
};

export const getApiAppProductCategoryManayByCache = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductCategoryManayByCacheData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductCategoryManayByCacheResponse, GetApiAppProductCategoryManayByCacheError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/manay-by-cache'
    });
};

export const getApiAppProductCategoryByCache = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductCategoryByCacheData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductCategoryByCacheResponse, GetApiAppProductCategoryByCacheError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/by-cache'
    });
};

export const getApiAppProductCategoryById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductCategoryByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductCategoryByIdResponse, GetApiAppProductCategoryByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/{id}'
    });
};

export const putApiAppProductCategoryById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiAppProductCategoryByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiAppProductCategoryByIdResponse, PutApiAppProductCategoryByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/{id}'
    });
};

export const deleteApiAppProductCategoryById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppProductCategoryByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppProductCategoryByIdResponse, DeleteApiAppProductCategoryByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/{id}'
    });
};

export const getApiAppProductCategoryMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductCategoryManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductCategoryManyResponse, GetApiAppProductCategoryManyError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/many'
    });
};

export const deleteApiAppProductCategoryMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppProductCategoryManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppProductCategoryManyResponse, DeleteApiAppProductCategoryManyError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/many'
    });
};

export const getApiAppProductCategory = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductCategoryData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductCategoryResponse, GetApiAppProductCategoryError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category'
    });
};

export const postApiAppProductCategory = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppProductCategoryData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppProductCategoryResponse, PostApiAppProductCategoryError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category'
    });
};

export const postApiAppProductCategoryRepairData = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppProductCategoryRepairDataData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppProductCategoryRepairDataResponse, PostApiAppProductCategoryRepairDataError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/repair-data'
    });
};

export const getApiAppProductCategoryByIdRootChildren = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductCategoryByIdRootChildrenData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductCategoryByIdRootChildrenResponse, GetApiAppProductCategoryByIdRootChildrenError, ThrowOnError>({
        ...options,
        url: '/api/app/product-category/{id}/root-children'
    });
};

export const postApiAppProductType = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppProductTypeData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppProductTypeResponse, PostApiAppProductTypeError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type'
    });
};

export const getApiAppProductType = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductTypeData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeResponse, GetApiAppProductTypeError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type'
    });
};

export const putApiAppProductTypeById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiAppProductTypeByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiAppProductTypeByIdResponse, PutApiAppProductTypeByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/{id}'
    });
};

export const getApiAppProductTypeById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductTypeByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeByIdResponse, GetApiAppProductTypeByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/{id}'
    });
};

export const deleteApiAppProductTypeById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppProductTypeByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppProductTypeByIdResponse, DeleteApiAppProductTypeByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/{id}'
    });
};

export const postApiAppProductTypeSetPropertyNamesByProductTypeId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAppProductTypeSetPropertyNamesByProductTypeIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppProductTypeSetPropertyNamesByProductTypeIdResponse, PostApiAppProductTypeSetPropertyNamesByProductTypeIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/set-property-names/{productTypeId}'
    });
};

export const getApiAppProductTypePropertyNameListByProductTypeId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductTypePropertyNameListByProductTypeIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypePropertyNameListByProductTypeIdResponse, GetApiAppProductTypePropertyNameListByProductTypeIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/property-name-list/{productTypeId}'
    });
};

export const getApiAppProductTypePropertyNamesByProductTypeId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductTypePropertyNamesByProductTypeIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypePropertyNamesByProductTypeIdResponse, GetApiAppProductTypePropertyNamesByProductTypeIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/property-names/{productTypeId}'
    });
};

export const getApiAppProductTypeMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductTypeManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeManyResponse, GetApiAppProductTypeManyError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/many'
    });
};

export const deleteApiAppProductTypeMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppProductTypeManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppProductTypeManyResponse, DeleteApiAppProductTypeManyError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type/many'
    });
};

export const getApiAppProductTypeCategoryByIdItemByCache = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductTypeCategoryByIdItemByCacheData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeCategoryByIdItemByCacheResponse, GetApiAppProductTypeCategoryByIdItemByCacheError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/{id}/item-by-cache'
    });
};

export const getApiAppProductTypeCategoryManayByCache = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductTypeCategoryManayByCacheData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeCategoryManayByCacheResponse, GetApiAppProductTypeCategoryManayByCacheError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/manay-by-cache'
    });
};

export const getApiAppProductTypeCategoryByCache = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductTypeCategoryByCacheData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeCategoryByCacheResponse, GetApiAppProductTypeCategoryByCacheError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/by-cache'
    });
};

export const getApiAppProductTypeCategoryById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductTypeCategoryByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeCategoryByIdResponse, GetApiAppProductTypeCategoryByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/{id}'
    });
};

export const putApiAppProductTypeCategoryById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiAppProductTypeCategoryByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiAppProductTypeCategoryByIdResponse, PutApiAppProductTypeCategoryByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/{id}'
    });
};

export const deleteApiAppProductTypeCategoryById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppProductTypeCategoryByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppProductTypeCategoryByIdResponse, DeleteApiAppProductTypeCategoryByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/{id}'
    });
};

export const getApiAppProductTypeCategoryMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductTypeCategoryManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeCategoryManyResponse, GetApiAppProductTypeCategoryManyError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/many'
    });
};

export const deleteApiAppProductTypeCategoryMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppProductTypeCategoryManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppProductTypeCategoryManyResponse, DeleteApiAppProductTypeCategoryManyError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/many'
    });
};

export const getApiAppProductTypeCategory = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppProductTypeCategoryData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeCategoryResponse, GetApiAppProductTypeCategoryError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category'
    });
};

export const postApiAppProductTypeCategory = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppProductTypeCategoryData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppProductTypeCategoryResponse, PostApiAppProductTypeCategoryError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category'
    });
};

export const postApiAppProductTypeCategoryRepairData = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppProductTypeCategoryRepairDataData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppProductTypeCategoryRepairDataResponse, PostApiAppProductTypeCategoryRepairDataError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/repair-data'
    });
};

export const getApiAppProductTypeCategoryByIdRootChildren = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppProductTypeCategoryByIdRootChildrenData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppProductTypeCategoryByIdRootChildrenResponse, GetApiAppProductTypeCategoryByIdRootChildrenError, ThrowOnError>({
        ...options,
        url: '/api/app/product-type-category/{id}/root-children'
    });
};

export const postApiAppPropertyNameByProductTypeByProductTypeId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAppPropertyNameByProductTypeByProductTypeIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppPropertyNameByProductTypeByProductTypeIdResponse, PostApiAppPropertyNameByProductTypeByProductTypeIdError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name/by-product-type/{productTypeId}'
    });
};

export const getApiAppPropertyNameByProductTypeByProductTypeId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppPropertyNameByProductTypeByProductTypeIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppPropertyNameByProductTypeByProductTypeIdResponse, GetApiAppPropertyNameByProductTypeByProductTypeIdError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name/by-product-type/{productTypeId}'
    });
};

export const postApiAppPropertyNameByIdUpdate = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAppPropertyNameByIdUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppPropertyNameByIdUpdateResponse, PostApiAppPropertyNameByIdUpdateError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name/{id}/update'
    });
};

export const getApiAppPropertyName = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppPropertyNameData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppPropertyNameResponse, GetApiAppPropertyNameError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name'
    });
};

export const getApiAppPropertyNameById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppPropertyNameByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppPropertyNameByIdResponse, GetApiAppPropertyNameByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name/{id}'
    });
};

export const deleteApiAppPropertyNameById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppPropertyNameByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppPropertyNameByIdResponse, DeleteApiAppPropertyNameByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name/{id}'
    });
};

export const getApiAppPropertyNameMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppPropertyNameManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppPropertyNameManyResponse, GetApiAppPropertyNameManyError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name/many'
    });
};

export const deleteApiAppPropertyNameMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppPropertyNameManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppPropertyNameManyResponse, DeleteApiAppPropertyNameManyError, ThrowOnError>({
        ...options,
        url: '/api/app/property-name/many'
    });
};

export const postApiAppPropertyValue = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppPropertyValueData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppPropertyValueResponse, PostApiAppPropertyValueError, ThrowOnError>({
        ...options,
        url: '/api/app/property-value'
    });
};

export const getApiAppPropertyValue = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppPropertyValueData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppPropertyValueResponse, GetApiAppPropertyValueError, ThrowOnError>({
        ...options,
        url: '/api/app/property-value'
    });
};

export const postApiAppPropertyValueByIdUpdate = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAppPropertyValueByIdUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppPropertyValueByIdUpdateResponse, PostApiAppPropertyValueByIdUpdateError, ThrowOnError>({
        ...options,
        url: '/api/app/property-value/{id}/update'
    });
};

export const getApiAppPropertyValueById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppPropertyValueByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppPropertyValueByIdResponse, GetApiAppPropertyValueByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/property-value/{id}'
    });
};

export const deleteApiAppPropertyValueById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppPropertyValueByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppPropertyValueByIdResponse, DeleteApiAppPropertyValueByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/property-value/{id}'
    });
};

export const getApiAppPropertyValueMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppPropertyValueManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppPropertyValueManyResponse, GetApiAppPropertyValueManyError, ThrowOnError>({
        ...options,
        url: '/api/app/property-value/many'
    });
};

export const deleteApiAppPropertyValueMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppPropertyValueManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppPropertyValueManyResponse, DeleteApiAppPropertyValueManyError, ThrowOnError>({
        ...options,
        url: '/api/app/property-value/many'
    });
};

export const postApiAppStandardProductUnit = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppStandardProductUnitData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppStandardProductUnitResponse, PostApiAppStandardProductUnitError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit'
    });
};

export const getApiAppStandardProductUnit = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppStandardProductUnitData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppStandardProductUnitResponse, GetApiAppStandardProductUnitError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit'
    });
};

export const putApiAppStandardProductUnitById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiAppStandardProductUnitByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiAppStandardProductUnitByIdResponse, PutApiAppStandardProductUnitByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/{id}'
    });
};

export const getApiAppStandardProductUnitById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppStandardProductUnitByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppStandardProductUnitByIdResponse, GetApiAppStandardProductUnitByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/{id}'
    });
};

export const deleteApiAppStandardProductUnitById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppStandardProductUnitByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppStandardProductUnitByIdResponse, DeleteApiAppStandardProductUnitByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/{id}'
    });
};

export const postApiAppStandardProductUnitSetPropertyValueByStandardProductUnitId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAppStandardProductUnitSetPropertyValueByStandardProductUnitIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppStandardProductUnitSetPropertyValueByStandardProductUnitIdResponse, PostApiAppStandardProductUnitSetPropertyValueByStandardProductUnitIdError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/set-property-value/{standardProductUnitId}'
    });
};

export const postApiAppStandardProductUnitSetManyCategoryList = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppStandardProductUnitSetManyCategoryListData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppStandardProductUnitSetManyCategoryListResponse, PostApiAppStandardProductUnitSetManyCategoryListError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/set-many-category-list'
    });
};

export const postApiAppStandardProductUnitSetCategoryListByStandardProductUnitId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAppStandardProductUnitSetCategoryListByStandardProductUnitIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppStandardProductUnitSetCategoryListByStandardProductUnitIdResponse, PostApiAppStandardProductUnitSetCategoryListByStandardProductUnitIdError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/set-category-list/{standardProductUnitId}'
    });
};

export const getApiAppStandardProductUnitMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppStandardProductUnitManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppStandardProductUnitManyResponse, GetApiAppStandardProductUnitManyError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/many'
    });
};

export const deleteApiAppStandardProductUnitMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppStandardProductUnitManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppStandardProductUnitManyResponse, DeleteApiAppStandardProductUnitManyError, ThrowOnError>({
        ...options,
        url: '/api/app/standard-product-unit/many'
    });
};

export const postApiAppStockKeepingUnit = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAppStockKeepingUnitData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAppStockKeepingUnitResponse, PostApiAppStockKeepingUnitError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit'
    });
};

export const getApiAppStockKeepingUnit = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppStockKeepingUnitData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppStockKeepingUnitResponse, GetApiAppStockKeepingUnitError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit'
    });
};

export const getApiAppStockKeepingUnitById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppStockKeepingUnitByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppStockKeepingUnitByIdResponse, GetApiAppStockKeepingUnitByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit/{id}'
    });
};

export const putApiAppStockKeepingUnitById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiAppStockKeepingUnitByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiAppStockKeepingUnitByIdResponse, PutApiAppStockKeepingUnitByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit/{id}'
    });
};

export const deleteApiAppStockKeepingUnitById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAppStockKeepingUnitByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppStockKeepingUnitByIdResponse, DeleteApiAppStockKeepingUnitByIdError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit/{id}'
    });
};

export const getApiAppStockKeepingUnitByIdDetail = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAppStockKeepingUnitByIdDetailData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppStockKeepingUnitByIdDetailResponse, GetApiAppStockKeepingUnitByIdDetailError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit/{id}/detail'
    });
};

export const getApiAppStockKeepingUnitMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAppStockKeepingUnitManyData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAppStockKeepingUnitManyResponse, GetApiAppStockKeepingUnitManyError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit/many'
    });
};

export const deleteApiAppStockKeepingUnitMany = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiAppStockKeepingUnitManyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAppStockKeepingUnitManyResponse, DeleteApiAppStockKeepingUnitManyError, ThrowOnError>({
        ...options,
        url: '/api/app/stock-keeping-unit/many'
    });
};