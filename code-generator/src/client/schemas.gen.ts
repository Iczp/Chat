// This file is auto-generated by @hey-api/openapi-ts

export const IczpNet_AbpCommons_Models_FilterInputSchema = {
    required: ['value'],
    type: 'object',
    properties: {
        propertyNameId: {
            type: 'string',
            format: 'uuid'
        },
        expressType: {
            type: 'string',
            nullable: true
        },
        value: {
            minLength: 1,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_AbpCommons_Models_ValueInputSchema = {
    required: ['value'],
    type: 'object',
    properties: {
        value: {
            minLength: 1,
            type: 'string'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_Brands_Dtos_BrandCreateInputSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        name: {
            minLength: 1,
            type: 'string'
        },
        picture: {
            maxLength: 600,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_Brands_Dtos_BrandDetailDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        picture: {
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_Brands_Dtos_BrandDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        picture: {
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_Brands_Dtos_BrandSampleDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        picture: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_Brands_Dtos_BrandSetProductTypeInputSchema = {
    type: 'object',
    properties: {
        brandId: {
            type: 'string',
            format: 'uuid'
        },
        productTypeIdList: {
            type: 'array',
            items: {
                type: 'string',
                format: 'uuid'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_Brands_Dtos_BrandUpdateInputSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        name: {
            minLength: 1,
            type: 'string'
        },
        picture: {
            maxLength: 600,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_Enums_ValueTypeEnumSchema = {
    enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    type: 'integer',
    format: 'int32'
} as const;

export const IczpNet_Invoicing_ProductCategorys_Dtos_ProductCategoryCreateInputSchema = {
    type: 'object',
    properties: {
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        description: {
            type: 'string',
            nullable: true
        },
        shopId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductCategorys_Dtos_ProductCategoryDetailDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        depth: {
            type: 'integer',
            format: 'int32'
        },
        childrenCount: {
            type: 'integer',
            format: 'int32'
        },
        fullPath: {
            type: 'string',
            nullable: true
        },
        fullPathName: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        isStatic: {
            type: 'boolean'
        },
        isActive: {
            type: 'boolean'
        },
        shopId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductCategorys_Dtos_ProductCategoryDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        depth: {
            type: 'integer',
            format: 'int32'
        },
        childrenCount: {
            type: 'integer',
            format: 'int32'
        },
        fullPath: {
            type: 'string',
            nullable: true
        },
        fullPathName: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        isStatic: {
            type: 'boolean'
        },
        isActive: {
            type: 'boolean'
        },
        shopId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductCategorys_Dtos_ProductCategoryUpdateInputSchema = {
    type: 'object',
    properties: {
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductCategorys_ProductCategoryInfoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        depth: {
            type: 'integer',
            format: 'int32'
        },
        childrenCount: {
            type: 'integer',
            format: 'int32'
        },
        fullPath: {
            type: 'string',
            nullable: true
        },
        fullPathName: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        isStatic: {
            type: 'boolean'
        },
        isActive: {
            type: 'boolean'
        },
        shopId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypeCategorys_Dtos_ProductTypeCategoryCreateInputSchema = {
    type: 'object',
    properties: {
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypeCategorys_Dtos_ProductTypeCategoryDetailDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        depth: {
            type: 'integer',
            format: 'int32'
        },
        childrenCount: {
            type: 'integer',
            format: 'int32'
        },
        fullPath: {
            type: 'string',
            nullable: true
        },
        fullPathName: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        isStatic: {
            type: 'boolean'
        },
        isActive: {
            type: 'boolean'
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypeCategorys_Dtos_ProductTypeCategoryDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        depth: {
            type: 'integer',
            format: 'int32'
        },
        childrenCount: {
            type: 'integer',
            format: 'int32'
        },
        fullPath: {
            type: 'string',
            nullable: true
        },
        fullPathName: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        isStatic: {
            type: 'boolean'
        },
        isActive: {
            type: 'boolean'
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypeCategorys_Dtos_ProductTypeCategoryUpdateInputSchema = {
    type: 'object',
    properties: {
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypeCategorys_ProductTypeCategoryInfoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        parentId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        depth: {
            type: 'integer',
            format: 'int32'
        },
        childrenCount: {
            type: 'integer',
            format: 'int32'
        },
        fullPath: {
            type: 'string',
            nullable: true
        },
        fullPathName: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        },
        isStatic: {
            type: 'boolean'
        },
        isActive: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypes_Dtos_ProductTypeCreateInputSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        productTypeCategoryId: {
            type: 'string',
            format: 'uuid',
            default: null,
            nullable: true
        },
        name: {
            minLength: 1,
            type: 'string'
        },
        picture: {
            maxLength: 600,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypes_Dtos_ProductTypeDetailDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        picture: {
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypes_Dtos_ProductTypeDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        picture: {
            type: 'string',
            nullable: true
        },
        productTypeCategoryId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        spuCount: {
            type: 'integer',
            format: 'int32'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypes_Dtos_ProductTypePropertyNameDtoSchema = {
    type: 'object',
    properties: {
        propertyName: {
            '$ref': '#/components/schemas/IczpNet.Invoicing.PropertyNames.Dtos.PropertyNameSampleDto'
        },
        isUnique: {
            type: 'boolean'
        },
        isRequired: {
            type: 'boolean'
        },
        isHidden: {
            type: 'boolean'
        },
        isMultipleValue: {
            type: 'boolean'
        },
        isCustomerPlus: {
            type: 'boolean'
        },
        isValidateValue: {
            type: 'boolean'
        },
        isValidateCount: {
            type: 'boolean'
        },
        isValidateLength: {
            type: 'boolean'
        },
        isValidateRegex: {
            type: 'boolean'
        },
        isFormat: {
            type: 'boolean'
        },
        defaultValue: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        placeholder: {
            type: 'boolean'
        },
        explain: {
            type: 'boolean'
        },
        minValue: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        maxValue: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        minCount: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        maxCount: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        maxLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        minLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        formatInput: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        formatOutput: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypes_Dtos_ProductTypePropertyNameInputSchema = {
    type: 'object',
    properties: {
        isUnique: {
            type: 'boolean'
        },
        isRequired: {
            type: 'boolean'
        },
        isHidden: {
            type: 'boolean'
        },
        isMultipleValue: {
            type: 'boolean'
        },
        isCustomerPlus: {
            type: 'boolean'
        },
        isValidateValue: {
            type: 'boolean'
        },
        isValidateCount: {
            type: 'boolean'
        },
        isValidateLength: {
            type: 'boolean'
        },
        isValidateRegex: {
            type: 'boolean'
        },
        isFormat: {
            type: 'boolean'
        },
        defaultValue: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        placeholder: {
            type: 'boolean'
        },
        explain: {
            type: 'boolean'
        },
        minValue: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        maxValue: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        minCount: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        maxCount: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        maxLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        minLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        formatInput: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        formatOutput: {
            maxLength: 50,
            type: 'string',
            nullable: true
        },
        sorting: {
            type: 'number',
            format: 'double'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_ProductTypes_Dtos_ProductTypeUpdateInputSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        productTypeCategoryId: {
            type: 'string',
            format: 'uuid',
            default: null,
            nullable: true
        },
        name: {
            minLength: 1,
            type: 'string'
        },
        picture: {
            maxLength: 600,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_PropertyNames_Dtos_PropertyNameCreateInputSchema = {
    type: 'object',
    properties: {
        name: {
            maxLength: 256,
            type: 'string',
            nullable: true
        },
        code: {
            maxLength: 40,
            type: 'string',
            default: null,
            nullable: true
        },
        unit: {
            maxLength: 10,
            type: 'string',
            default: null,
            nullable: true
        },
        valueType: {
            '$ref': '#/components/schemas/IczpNet.Invoicing.Enums.ValueTypeEnum'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_PropertyNames_Dtos_PropertyNameDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        unit: {
            type: 'string',
            nullable: true
        },
        valueType: {
            '$ref': '#/components/schemas/IczpNet.Invoicing.Enums.ValueTypeEnum'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_PropertyNames_Dtos_PropertyNameSampleDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        name: {
            type: 'string',
            nullable: true
        },
        valueType: {
            '$ref': '#/components/schemas/IczpNet.Invoicing.Enums.ValueTypeEnum'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_PropertyNames_Dtos_PropertyNameUpdateInputSchema = {
    type: 'object',
    properties: {
        name: {
            maxLength: 256,
            type: 'string',
            nullable: true
        },
        code: {
            maxLength: 40,
            type: 'string',
            default: null,
            nullable: true
        },
        unit: {
            maxLength: 10,
            type: 'string',
            default: null,
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_PropertyValues_Dtos_PropertyValueCreateInputSchema = {
    type: 'object',
    properties: {
        propertyNameId: {
            type: 'string',
            format: 'uuid'
        },
        displayValue: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_PropertyValues_Dtos_PropertyValueDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        displayValue: {
            type: 'string',
            nullable: true
        },
        standardProductUnitApplyCount: {
            type: 'integer',
            format: 'int32'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_PropertyValues_Dtos_PropertyValueUpdateInputSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        displayValue: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_SalePropertys_Dtos_SalePropertyDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        saleValueList: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.SaleValues.Dtos.SaleValueDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_SaleValues_Dtos_SaleValueDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        value: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StandardProductUnits_Dtos_StandardProductUnitCreateInputSchema = {
    type: 'object',
    properties: {
        brandId: {
            type: 'string',
            format: 'uuid',
            default: '736305dc-49c0-b904-9423-3a071b4645d9',
            nullable: true
        },
        title: {
            maxLength: 256,
            type: 'string',
            nullable: true
        },
        name: {
            maxLength: 64,
            type: 'string',
            nullable: true
        },
        code: {
            maxLength: 40,
            type: 'string',
            nullable: true
        },
        picture: {
            maxLength: 600,
            type: 'string',
            nullable: true
        },
        description: {
            maxLength: 256,
            type: 'string',
            nullable: true
        },
        propertyValues: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/IczpNet.AbpCommons.Models.ValueInput'
                },
                nullable: true
            },
            nullable: true
        },
        categoryIdList: {
            type: 'array',
            items: {
                type: 'string',
                format: 'uuid'
            },
            nullable: true
        },
        salePropertyList: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.SalePropertys.Dtos.SalePropertyDto'
            },
            nullable: true
        },
        stockKeepingUnitList: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.StockKeepingUnits.Dtos.StockKeepingUnitCreateOrUpdateInput'
            },
            nullable: true
        },
        productTypeId: {
            type: 'string',
            format: 'uuid',
            default: '6dca2e70-7331-83b6-ab77-3a07006fd1f9'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StandardProductUnits_Dtos_StandardProductUnitDetailDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        creationTime: {
            type: 'string',
            format: 'date-time'
        },
        creatorId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        lastModificationTime: {
            type: 'string',
            format: 'date-time',
            nullable: true
        },
        lastModifierId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        title: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        },
        brand: {
            '$ref': '#/components/schemas/IczpNet.Invoicing.Brands.Dtos.BrandSampleDto'
        },
        isActive: {
            type: 'boolean'
        },
        price: {
            type: 'number',
            format: 'double',
            nullable: true
        },
        minPrice: {
            type: 'number',
            format: 'double',
            nullable: true
        },
        maxPrice: {
            type: 'number',
            format: 'double',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        },
        propertyValues: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/IczpNet.AbpCommons.Models.ValueInput'
                },
                nullable: true
            },
            nullable: true
        },
        stockKeepingUnitList: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.StockKeepingUnits.Dtos.StockKeepingUnitDetailDto'
            },
            nullable: true
        },
        salePropertyList: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.SalePropertys.Dtos.SalePropertyDto'
            },
            nullable: true
        },
        categoryIdList: {
            type: 'array',
            items: {
                type: 'string',
                format: 'uuid'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StandardProductUnits_Dtos_StandardProductUnitDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        creationTime: {
            type: 'string',
            format: 'date-time'
        },
        creatorId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        lastModificationTime: {
            type: 'string',
            format: 'date-time',
            nullable: true
        },
        lastModifierId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        title: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        concurrencyStamp: {
            type: 'string',
            nullable: true
        },
        propertyValues: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/IczpNet.AbpCommons.Models.ValueInput'
                },
                nullable: true
            },
            nullable: true
        },
        isActive: {
            type: 'boolean'
        },
        price: {
            type: 'number',
            format: 'double',
            nullable: true
        },
        minPrice: {
            type: 'number',
            format: 'double',
            nullable: true
        },
        maxPrice: {
            type: 'number',
            format: 'double',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StandardProductUnits_Dtos_StandardProductUnitUpdateInputSchema = {
    type: 'object',
    properties: {
        brandId: {
            type: 'string',
            format: 'uuid',
            default: '736305dc-49c0-b904-9423-3a071b4645d9',
            nullable: true
        },
        title: {
            maxLength: 256,
            type: 'string',
            nullable: true
        },
        name: {
            maxLength: 64,
            type: 'string',
            nullable: true
        },
        code: {
            maxLength: 40,
            type: 'string',
            nullable: true
        },
        picture: {
            maxLength: 600,
            type: 'string',
            nullable: true
        },
        description: {
            maxLength: 256,
            type: 'string',
            nullable: true
        },
        propertyValues: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/IczpNet.AbpCommons.Models.ValueInput'
                },
                nullable: true
            },
            nullable: true
        },
        categoryIdList: {
            type: 'array',
            items: {
                type: 'string',
                format: 'uuid'
            },
            nullable: true
        },
        salePropertyList: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.SalePropertys.Dtos.SalePropertyDto'
            },
            nullable: true
        },
        stockKeepingUnitList: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.StockKeepingUnits.Dtos.StockKeepingUnitCreateOrUpdateInput'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StockKeepingUnits_Dtos_StockKeepingUnitCreateInputSchema = {
    type: 'object',
    properties: {
        title: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        code: {
            maxLength: 40,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        picture: {
            maxLength: 600,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        description: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        inventoryQuantity: {
            type: 'integer',
            format: 'int64'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        isActive: {
            type: 'boolean'
        },
        saleValueIndex: {
            type: 'object',
            additionalProperties: {
                type: 'integer',
                format: 'int32'
            },
            nullable: true
        },
        standardProductUnitId: {
            type: 'string',
            format: 'uuid',
            default: '206ba7b1-89ee-217f-e0ca-3a07053fa976'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StockKeepingUnits_Dtos_StockKeepingUnitCreateOrUpdateInputSchema = {
    type: 'object',
    properties: {
        title: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        code: {
            maxLength: 40,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        picture: {
            maxLength: 600,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        description: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        inventoryQuantity: {
            type: 'integer',
            format: 'int64'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        isActive: {
            type: 'boolean'
        },
        saleValueIndex: {
            type: 'object',
            additionalProperties: {
                type: 'integer',
                format: 'int32'
            },
            nullable: true
        },
        id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StockKeepingUnits_Dtos_StockKeepingUnitDetailDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        title: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        picture: {
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        },
        totalStockQuantity: {
            type: 'integer',
            format: 'int64'
        },
        lockStockQuantity: {
            type: 'integer',
            format: 'int64'
        },
        stockQuantity: {
            type: 'integer',
            format: 'int64'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        isActive: {
            type: 'boolean'
        },
        saleValueIndex: {
            type: 'object',
            additionalProperties: {
                type: 'integer',
                format: 'int32'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StockKeepingUnits_Dtos_StockKeepingUnitDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        title: {
            type: 'string',
            nullable: true
        },
        code: {
            type: 'string',
            nullable: true
        },
        picture: {
            type: 'string',
            nullable: true
        },
        description: {
            type: 'string',
            nullable: true
        },
        totalStockQuantity: {
            type: 'integer',
            format: 'int64'
        },
        lockStockQuantity: {
            type: 'integer',
            format: 'int64'
        },
        stockQuantity: {
            type: 'integer',
            format: 'int64'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        isActive: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const IczpNet_Invoicing_StockKeepingUnits_Dtos_StockKeepingUnitUpdateInputSchema = {
    type: 'object',
    properties: {
        title: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        code: {
            maxLength: 40,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        picture: {
            maxLength: 600,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        description: {
            maxLength: 256,
            minLength: 0,
            type: 'string',
            nullable: true
        },
        inventoryQuantity: {
            type: 'integer',
            format: 'int64'
        },
        price: {
            type: 'number',
            format: 'double'
        },
        isActive: {
            type: 'boolean'
        },
        saleValueIndex: {
            type: 'object',
            additionalProperties: {
                type: 'integer',
                format: 'int32'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_Brands_Dtos_BrandDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.Brands.Dtos.BrandDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_ProductCategorys_Dtos_ProductCategoryDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.ProductCategorys.Dtos.ProductCategoryDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_ProductCategorys_ProductCategoryInfo__IczpNet_Invoicing_Domain_Shared__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.ProductCategorys.ProductCategoryInfo'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_ProductTypeCategorys_Dtos_ProductTypeCategoryDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.ProductTypeCategorys.Dtos.ProductTypeCategoryDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_ProductTypeCategorys_ProductTypeCategoryInfo__IczpNet_Invoicing_Domain_Shared__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.ProductTypeCategorys.ProductTypeCategoryInfo'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_ProductTypes_Dtos_ProductTypeDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.ProductTypes.Dtos.ProductTypeDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_PropertyNames_Dtos_PropertyNameDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.PropertyNames.Dtos.PropertyNameDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_PropertyValues_Dtos_PropertyValueDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.PropertyValues.Dtos.PropertyValueDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_StandardProductUnits_Dtos_StandardProductUnitDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.StandardProductUnits.Dtos.StandardProductUnitDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Application_Dtos_PagedResultDto_1__IczpNet_Invoicing_StockKeepingUnits_Dtos_StockKeepingUnitDto__IczpNet_Invoicing_Application_Contracts__Version_9_0_0_0__Culture_neutral__PublicKeyToken_null__Schema = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IczpNet.Invoicing.StockKeepingUnits.Dtos.StockKeepingUnitDto'
            },
            nullable: true
        },
        totalCount: {
            type: 'integer',
            format: 'int64'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationAuthConfigurationDtoSchema = {
    type: 'object',
    properties: {
        grantedPolicies: {
            type: 'object',
            additionalProperties: {
                type: 'boolean'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationConfigurationDtoSchema = {
    type: 'object',
    properties: {
        localization: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto'
        },
        auth: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto'
        },
        setting: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto'
        },
        currentUser: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto'
        },
        features: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto'
        },
        globalFeatures: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto'
        },
        multiTenancy: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto'
        },
        currentTenant: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto'
        },
        timing: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto'
        },
        clock: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto'
        },
        objectExtensions: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto'
        },
        extraProperties: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationFeatureConfigurationDtoSchema = {
    type: 'object',
    properties: {
        values: {
            type: 'object',
            additionalProperties: {
                type: 'string',
                nullable: true
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationGlobalFeatureConfigurationDtoSchema = {
    type: 'object',
    properties: {
        enabledFeatures: {
            uniqueItems: true,
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationConfigurationDtoSchema = {
    type: 'object',
    properties: {
        values: {
            type: 'object',
            additionalProperties: {
                type: 'object',
                additionalProperties: {
                    type: 'string'
                }
            },
            nullable: true
        },
        resources: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto'
            },
            nullable: true
        },
        languages: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Localization.LanguageInfo'
            },
            nullable: true
        },
        currentCulture: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto'
        },
        defaultResourceName: {
            type: 'string',
            nullable: true
        },
        languagesMap: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/Volo.Abp.NameValue'
                }
            },
            nullable: true
        },
        languageFilesMap: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    '$ref': '#/components/schemas/Volo.Abp.NameValue'
                }
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationDtoSchema = {
    type: 'object',
    properties: {
        resources: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto'
            },
            nullable: true
        },
        currentCulture: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationResourceDtoSchema = {
    type: 'object',
    properties: {
        texts: {
            type: 'object',
            additionalProperties: {
                type: 'string'
            },
            nullable: true
        },
        baseResources: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationSettingConfigurationDtoSchema = {
    type: 'object',
    properties: {
        values: {
            type: 'object',
            additionalProperties: {
                type: 'string',
                nullable: true
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ClockDtoSchema = {
    type: 'object',
    properties: {
        kind: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentCultureDtoSchema = {
    type: 'object',
    properties: {
        displayName: {
            type: 'string',
            nullable: true
        },
        englishName: {
            type: 'string',
            nullable: true
        },
        threeLetterIsoLanguageName: {
            type: 'string',
            nullable: true
        },
        twoLetterIsoLanguageName: {
            type: 'string',
            nullable: true
        },
        isRightToLeft: {
            type: 'boolean'
        },
        cultureName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        nativeName: {
            type: 'string',
            nullable: true
        },
        dateTimeFormat: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentUserDtoSchema = {
    type: 'object',
    properties: {
        isAuthenticated: {
            type: 'boolean'
        },
        id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        tenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        impersonatorUserId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        impersonatorTenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        impersonatorUserName: {
            type: 'string',
            nullable: true
        },
        impersonatorTenantName: {
            type: 'string',
            nullable: true
        },
        userName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        surName: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        emailVerified: {
            type: 'boolean'
        },
        phoneNumber: {
            type: 'string',
            nullable: true
        },
        phoneNumberVerified: {
            type: 'boolean'
        },
        roles: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        sessionId: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_DateTimeFormatDtoSchema = {
    type: 'object',
    properties: {
        calendarAlgorithmType: {
            type: 'string',
            nullable: true
        },
        dateTimeFormatLong: {
            type: 'string',
            nullable: true
        },
        shortDatePattern: {
            type: 'string',
            nullable: true
        },
        fullDateTimePattern: {
            type: 'string',
            nullable: true
        },
        dateSeparator: {
            type: 'string',
            nullable: true
        },
        shortTimePattern: {
            type: 'string',
            nullable: true
        },
        longTimePattern: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_IanaTimeZoneSchema = {
    type: 'object',
    properties: {
        timeZoneName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_EntityExtensionDtoSchema = {
    type: 'object',
    properties: {
        properties: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto'
            },
            nullable: true
        },
        configuration: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumDtoSchema = {
    type: 'object',
    properties: {
        fields: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto'
            },
            nullable: true
        },
        localizationResource: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumFieldDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        value: {
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiCreateDtoSchema = {
    type: 'object',
    properties: {
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiDtoSchema = {
    type: 'object',
    properties: {
        onGet: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto'
        },
        onCreate: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto'
        },
        onUpdate: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiGetDtoSchema = {
    type: 'object',
    properties: {
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiUpdateDtoSchema = {
    type: 'object',
    properties: {
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyAttributeDtoSchema = {
    type: 'object',
    properties: {
        typeSimple: {
            type: 'string',
            nullable: true
        },
        config: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyDtoSchema = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        displayName: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto'
        },
        api: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto'
        },
        ui: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto'
        },
        policy: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPolicyDto'
        },
        attributes: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto'
            },
            nullable: true
        },
        configuration: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        },
        defaultValue: {
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyFeaturePolicyDtoSchema = {
    type: 'object',
    properties: {
        features: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        requiresAll: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyGlobalFeaturePolicyDtoSchema = {
    type: 'object',
    properties: {
        features: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        requiresAll: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyPermissionPolicyDtoSchema = {
    type: 'object',
    properties: {
        permissionNames: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        requiresAll: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyPolicyDtoSchema = {
    type: 'object',
    properties: {
        globalFeatures: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyGlobalFeaturePolicyDto'
        },
        features: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyFeaturePolicyDto'
        },
        permissions: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPermissionPolicyDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiDtoSchema = {
    type: 'object',
    properties: {
        onTable: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto'
        },
        onCreateForm: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto'
        },
        onEditForm: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto'
        },
        lookup: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiFormDtoSchema = {
    type: 'object',
    properties: {
        isVisible: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiLookupDtoSchema = {
    type: 'object',
    properties: {
        url: {
            type: 'string',
            nullable: true
        },
        resultListPropertyName: {
            type: 'string',
            nullable: true
        },
        displayPropertyName: {
            type: 'string',
            nullable: true
        },
        valuePropertyName: {
            type: 'string',
            nullable: true
        },
        filterParamName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiTableDtoSchema = {
    type: 'object',
    properties: {
        isVisible: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_LocalizableStringDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        resource: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ModuleExtensionDtoSchema = {
    type: 'object',
    properties: {
        entities: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto'
            },
            nullable: true
        },
        configuration: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ObjectExtensionsDtoSchema = {
    type: 'object',
    properties: {
        modules: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto'
            },
            nullable: true
        },
        enums: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimeZoneSchema = {
    type: 'object',
    properties: {
        iana: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone'
        },
        windows: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimingDtoSchema = {
    type: 'object',
    properties: {
        timeZone: {
            '$ref': '#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_WindowsTimeZoneSchema = {
    type: 'object',
    properties: {
        timeZoneId: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_MultiTenancy_CurrentTenantDtoSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        isAvailable: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_MultiTenancy_FindTenantResultDtoSchema = {
    type: 'object',
    properties: {
        success: {
            type: 'boolean'
        },
        tenantId: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        normalizedName: {
            type: 'string',
            nullable: true
        },
        isActive: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_AspNetCore_Mvc_MultiTenancy_MultiTenancyInfoDtoSchema = {
    type: 'object',
    properties: {
        isEnabled: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ActionApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        uniqueName: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        httpMethod: {
            type: 'string',
            nullable: true
        },
        url: {
            type: 'string',
            nullable: true
        },
        supportedVersions: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        parametersOnMethod: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel'
            },
            nullable: true
        },
        parameters: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ParameterApiDescriptionModel'
            },
            nullable: true
        },
        returnValue: {
            '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel'
        },
        allowAnonymous: {
            type: 'boolean',
            nullable: true
        },
        implementFrom: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ApplicationApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        modules: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ModuleApiDescriptionModel'
            },
            nullable: true
        },
        types: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.TypeApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ControllerApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        controllerName: {
            type: 'string',
            nullable: true
        },
        controllerGroupName: {
            type: 'string',
            nullable: true
        },
        isRemoteService: {
            type: 'boolean'
        },
        isIntegrationService: {
            type: 'boolean'
        },
        apiVersion: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        interfaces: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel'
            },
            nullable: true
        },
        actions: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ActionApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ControllerInterfaceApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        methods: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_InterfaceMethodApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        parametersOnMethod: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel'
            },
            nullable: true
        },
        returnValue: {
            '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_MethodParameterApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        typeAsString: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        isOptional: {
            type: 'boolean'
        },
        defaultValue: {
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ModuleApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        rootPath: {
            type: 'string',
            nullable: true
        },
        remoteServiceName: {
            type: 'string',
            nullable: true
        },
        controllers: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.ControllerApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ParameterApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        nameOnMethod: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        jsonName: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        isOptional: {
            type: 'boolean'
        },
        defaultValue: {
            nullable: true
        },
        constraintTypes: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        bindingSourceId: {
            type: 'string',
            nullable: true
        },
        descriptorName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_PropertyApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        jsonName: {
            type: 'string',
            nullable: true
        },
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        },
        isRequired: {
            type: 'boolean'
        },
        minLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        maxLength: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        minimum: {
            type: 'string',
            nullable: true
        },
        maximum: {
            type: 'string',
            nullable: true
        },
        regex: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_ReturnValueApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        typeSimple: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_Modeling_TypeApiDescriptionModelSchema = {
    type: 'object',
    properties: {
        baseType: {
            type: 'string',
            nullable: true
        },
        isEnum: {
            type: 'boolean'
        },
        enumNames: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        enumValues: {
            type: 'array',
            items: {},
            nullable: true
        },
        genericArguments: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        properties: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.Modeling.PropertyApiDescriptionModel'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_RemoteServiceErrorInfoSchema = {
    type: 'object',
    properties: {
        code: {
            type: 'string',
            nullable: true
        },
        message: {
            type: 'string',
            nullable: true
        },
        details: {
            type: 'string',
            nullable: true
        },
        data: {
            type: 'object',
            additionalProperties: {},
            nullable: true
        },
        validationErrors: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Volo.Abp.Http.RemoteServiceValidationErrorInfo'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_RemoteServiceErrorResponseSchema = {
    type: 'object',
    properties: {
        error: {
            '$ref': '#/components/schemas/Volo.Abp.Http.RemoteServiceErrorInfo'
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Http_RemoteServiceValidationErrorInfoSchema = {
    type: 'object',
    properties: {
        message: {
            type: 'string',
            nullable: true
        },
        members: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_Localization_LanguageInfoSchema = {
    type: 'object',
    properties: {
        cultureName: {
            type: 'string',
            nullable: true
        },
        uiCultureName: {
            type: 'string',
            nullable: true
        },
        displayName: {
            type: 'string',
            nullable: true
        },
        twoLetterISOLanguageName: {
            type: 'string',
            nullable: true,
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const Volo_Abp_NameValueSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        value: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;